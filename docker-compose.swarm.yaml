version: '3.9'
services:
  http-api-cache:
    image: redis:latest
    command: redis-server --maxclients 100000
    networks:
      - internal
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.labels.${TONCENTER_ENV}.http-api==true"
  http-api:
    image: ${DOCKER_REGISTRY:-docker.io/toncenter}/${DOCKER_REPO:-ton-http-api}:${IMAGE_TAG:?Please specify image tag!}
    build: 
      context: ton-http-api
      dockerfile: .docker/${DOCKERFILE:-Dockerfile}
      args:
        TON_REPO:
        TON_BRANCH:

    environment:
      TON_API_CACHE_ENABLED: 1
      TON_API_CACHE_REDIS_ENDPOINT: http-api-cache
      TON_API_CACHE_REDIS_PORT: 6379
      TON_API_CACHE_REDIS_TIMEOUT: 1
      TON_API_LOGS_JSONIFY:
      TON_API_LOGS_LEVEL:
      TON_API_TONLIB_LITESERVER_CONFIG: /run/secrets/http-api-liteserver-config
      TON_API_TONLIB_KEYSTORE: /tmp/ton-keystore
      TON_API_TONLIB_PARALLEL_REQUESTS_PER_LITESERVER:
      TON_API_TONLIB_CDLL_PATH:
      TON_API_TONLIB_REQUEST_TIMEOUT:
      TON_API_GET_METHODS_ENABLED:
      TON_API_JSON_RPC_ENABLED:
      TON_API_WEBSERVERS_WORKERS:
      TON_API_WEBSERVERS_THREADS:
      TON_API_V3_ENABLED:
      TON_API_GUNICORN_FLAGS:
      TON_API_ROOT_PATH:
      TON_API_BOC_ENDPOINT:
    networks:
      internal:
      toncenter-global:
        aliases:
          - ${TONCENTER_ENV:?}-http-api
    ports:
      - target: 8081
        published: "${TON_API_PUBLISH_PORT:-8081}"
        mode: "${TON_API_PUBLISH_PORT_MODE:-ingress}"
    secrets:
      - source: http-api-liteserver-config
        target: /run/secrets/http-api-liteserver-config
    labels:
      co.elastic.logs/enabled: "true"
      ton_network: ${TONCENTER_ENV}
    # healthcheck:
    #   test: curl --fail http://127.0.0.1:8081/api/v2/getMasterchainInfo
    #   interval: 15s
    #   timeout: 3s
    #   retries: 12
    deploy:
      mode: replicated
      replicas: ${SWARM_REPLICAS:-1}
      update_config:
        parallelism: ${SWARM_UPDATE_PARALLELISM:-1}
        delay: 30s
        monitor: 60s
        failure_action: pause
        order: start-first
      placement:
        constraints:
          - "node.labels.${TONCENTER_ENV}.http-api==true"
secrets:
  http-api-liteserver-config:
    file: ${TON_API_TONLIB_LITESERVER_CONFIG:?Liteserver config path is required}
    name: ls-config-${TON_API_TONLIB_LITESERVER_CONFIG_MD5:?Liteserver config hash variable is required}
networks:
  internal:
    attachable: true
    external: false
    driver_opts:
      com.docker.network.driver.mtu: 1350
  toncenter-global:
    external: true
