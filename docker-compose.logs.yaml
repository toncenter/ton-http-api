version: '3.7'
services:
  mongodb:
    image: mongo:5.0.5
    volumes:
      - mongodata:/data/db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: user1
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongodb_password
    secrets:
      - mongodb_password
    ports:
      - ${TON_API_LOGS_MONGODB_PORT:-27017}:${TON_API_LOGS_MONGODB_PORT:-27017}
    networks: 
      - internal
    restart: unless-stopped
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 60s
  main:
    secrets:
      - mongodb_password
  analytics:
    image: ${DOCKER_REGISTRY:-toncenter}/ton-analytics
    build: 
      context: ton-analytics
      dockerfile: .docker/Dockerfile
    secrets:
      - mongodb_password
    restart: unless-stopped
    ports:
      - ${TON_API_ANALYTICS_PORT:-8082}:8081
    environment:
      - TON_API_LOGS_ENABLED
      - TON_API_ANALYTICS_ROOT_PATH
      - TON_API_LOGS_LOG_SUCCESSFUL
      - TON_API_LOGS_MONGODB_HOST
      - TON_API_LOGS_MONGODB_PORT
      - TON_API_LOGS_MONGODB_DATABASE
      - TON_API_LOGS_MONGODB_USERNAME
      - TON_API_LOGS_MONGODB_PASSWORD_FILE
    networks:
      - internal
    command: -c "uvicorn anTON.main:app --host=0.0.0.0 --port=8081"
    healthcheck:
      test: curl -sS http://127.0.0.1:8081${TON_API_ANALYTICS_ROOT_PATH}/healthcheck || echo 1
      interval: 15s
      timeout: 3s
      retries: 12
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 60s 
      resources:
        limits:
          cpus: "1.0"
          memory: 4G
secrets:
  mongodb_password:
    file: private/mongodb_password
volumes:
  mongodata:
    external: false

